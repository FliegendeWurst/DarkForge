

/**
 * Plugins
 */

/*******************************************************************************
 *     DarkForge a Forge Hacked Client
 *     Copyright (C) 2017  Hexeption (Keir Davis)
 *
 *     This program is free software: you can redistribute it and/or modify
 *     it under the terms of the GNU General Public License as published by
 *     the Free Software Foundation, either version 3 of the License, or
 *     (at your option) any later version.
 *
 *     This program is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 *     You should have received a copy of the GNU General Public License
 *     along with this program.  If not, see <http://www.gnu.org/licenses/>.
 ******************************************************************************/
apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: "com.matthewprenger.cursegradle"
apply plugin: "se.bjurr.gitchangelog.git-changelog-gradle-plugin"

/**
 * Other Scripts
 */

apply from: "gradle/scripts/dependencies.gradle"
apply from: "gradle/scripts/integration.gradle"
apply from: "gradle/scripts/artifacts.gradle"
apply from: "gradle/scripts/optional.gradle"

buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            url = "https://plugins.gradle.org/m2"
        }
        maven {
            name = 'SpongePowered'
            url = 'http://repo.spongepowered.org/maven'
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
        classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.0.8"
        classpath "co.riiid:gradle-github-plugin:0.4.2"
        classpath "gradle.plugin.se.bjurr.gitchangelog:git-changelog-gradle-plugin:1.40"
        classpath "org.spongepowered:mixingradle:0.4-SNAPSHOT"
        classpath "com.github.jengelman.gradle.plugins:shadow:1.2.3"
    }
}
apply plugin: "co.riiid.gradle"
apply plugin: "org.spongepowered.mixin"
apply plugin: "com.github.johnrengelman.shadow"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
compileJava.options.encoding = 'UTF-8'

version = minecraft_version + "-b" + cibuild + "-univeral"
archivesBaseName = cibasename

def githubOwner = 'g'
def githubRepo = 'g'
def githubToken = 'g'
def githubTagName = 'g'
def githubTargetCommitish = 'g'
def githubName = 'g'
def githubPreRelease = true

def buildCount = 'B1'


if (hasProperty("teamcity")) {
    version = minecraft_version + "-" + teamcity["build.number"] + "-univeral"
    buildCount = "B" + teamcity["BuildCounter"]

    githubOwner = teamcity["githubOwner"]
    githubRepo = teamcity["githubProject"]
    githubToken = teamcity["githubToken"]
    githubTagName = teamcity["build.number"]
    githubTargetCommitish = teamcity["branch"]
    githubName = teamcity["build.number"]

    githubPreRelease = teamcity["githubPreRelease"]
}

minecraft {
    version = minecraft_version + "-" + forge_version

    replace "@VERSION@", project.version
    replace "@MCVERSION@", minecraft_version
    replace "@BUILD@", buildCount

    replaceIn "ClientInfo.java"

    runDir = "run"
    mappings = project.mcpVersion

    useDepAts = true
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"
        expand "version": project.version, "mcversion": project.minecraft.version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}

github {
    owner = githubOwner
    repo = githubRepo
    token = githubToken
    tagName = githubTagName
    targetCommitish = githubTargetCommitish
    name = githubName
    body = "test"
    prerelease = githubPreRelease
    assets = [
            jar.archivePath
    ]
}

task gitChangelogTask(type: se.bjurr.gitchangelog.plugin.gradle.GitChangelogTask) {
    filePath = "CHANGELOG.md"
    templateContent = new File('changelog.mustache').getText('UTF-8')
}

mixin {
    add sourceSets.main, "mixins.darkforge.refmap.json"
}

shadowJar {
    dependencies {
        include(dependency('org.spongepowered:mixin'))
    }

    exclude 'dummyThing'
    exclude 'LICENSE.txt'
    classifier = 'full'
}

reobf {
    shadowJar {
        mappingType = 'SEARGE'
        classpath = sourceSets.main.compileClasspath
    }
}

build.dependsOn(shadowJar)

jar {
    manifest {
        attributes(
                "MixinConfigs": 'mixins.mcwrapper.json',
                "tweakClass": 'org.spongepowered.asm.launch.MixinTweaker',
                "TweakOrder": 0,
                'FMLCorePluginContainsFMLMod': 'uk.co.hexeption.darkforge.loader.MixinLoader',
                'FMLAT': 'darkforge_at.cfg')
    }
}

